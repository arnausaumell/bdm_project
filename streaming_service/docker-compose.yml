version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka_net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka_net

  producer:
    build:
      context: ./producer
    container_name: kafka_producer
    depends_on:
      - kafka
    ports:
      - "8001:8001"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: comments
    volumes:
      - ./data:/app/data
    networks:
      - kafka_net
    command: [ "python3", "kafka_producer.py" ]

  consumer:
    build:
      context: ./consumer
    container_name: kafka_consumer
    depends_on:
      - kafka
    volumes:
      - ./data:/app/data
    networks:
      - kafka_net
    command: [ "python3", "kafka_consumer.py" ]

  kafka-client:
    image: confluentinc/cp-kafkacat:latest
    container_name: kafka_client
    entrypoint: [ "tail", "-f", "/dev/null" ]
    networks:
      - kafka_net

networks:
  kafka_net:
    driver: bridge
